plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id "maven-publish"
}

group = 'org.showpage'
version = '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}


tasks.named('test') {
    useJUnitPlatform()
}

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                groupId = "org.showpage"
                artifactId = "spring-web-jwt"
                version = "1.0.0"

                artifact sourcesJar
                artifact packageJavadoc
            }
        }
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
    options.setMemberLevel( JavadocMemberLevel.PUBLIC )
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allJava
}

task packageJavadoc(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}